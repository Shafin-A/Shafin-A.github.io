{"version":3,"sources":["logo.svg","Components/NavDrawer.js","Components/NavBar.js","Components/Main.js","Components/Resume.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","graphics/myAvatar.png","graphics/ShafinAhmedCV.pdf"],"names":["module","exports","NavDrawer","classes","this","props","Drawer","anchor","open","drawerOpened","onClose","toggleDrawer","paper","navdrawer","onClick","onKeyDown","List","style","width","color","ListItem","button","key","ListItemIcon","ListItemText","primary","component","Link","to","target","Divider","React","Component","withStyles","theme","backgroundImage","NavBar","booleanValue","setState","state","Fragment","CssBaseline","AppBar","className","appbar","position","Toolbar","IconButton","edge","aria-label","textDecoration","Avatar","alt","src","MyAvatarPng","Typography","variant","title","Box","fontWeight","m","root","flexGrow","Main","Resume","pdfjs","GlobalWorkerOptions","workerSrc","version","file","resumePDF","pageNumber","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","webpackEmptyContext","req","e","Error","code","keys","resolve","id"],"mappings":"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","file":"static/js/main.20fb8f50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n  navdrawer: {\r\n    backgroundImage: \"linear-gradient(to bottom, #304352, #000000)\",\r\n  }\r\n});\r\n\r\nexport class NavDrawer extends React.Component {\r\n  render() {\r\n    const { classes } = this.props; \r\n\r\n    return (\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={this.props.drawerOpened}\r\n        onClose={this.props.toggleDrawer(false)}\r\n        classes={{ paper: classes.navdrawer }}\r\n      >\r\n        <div\r\n          onClick={this.props.toggleDrawer(false)}\r\n          onKeyDown={this.props.toggleDrawer(false)}\r\n        >\r\n          <List style={{width: '20em', color: 'white'}}>\r\n            <ListItem button key=\"Home\">\r\n              <ListItemIcon style={{color: 'white'}}><HomeIcon /></ListItemIcon>\r\n              <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n            <ListItem button key=\"Resume\" component={Link} to=\"/resume\" target=\"_blank\">\r\n              <ListItemIcon style={{color: 'white'}}><ReceiptIcon /></ListItemIcon>\r\n              <ListItemText primary=\"Resume\" />\r\n            </ListItem>\r\n            <ListItem button key=\"Projects\">\r\n              <ListItemIcon style={{color: 'white'}}><CodeIcon /></ListItemIcon>\r\n              <ListItemText primary=\"Projects\" />\r\n            </ListItem>\r\n            <ListItem button key=\"Contact\">\r\n              <ListItemIcon style={{color: 'white'}}><ContactMailIcon /></ListItemIcon>\r\n              <ListItemText primary=\"Contact\" />\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nNavDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavDrawer);","import AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PropTypes from 'prop-types';\r\nimport NavDrawer from './NavDrawer';\r\nimport MyAvatarPng from '../graphics/myAvatar.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appbar: {\r\n    backgroundImage: \"linear-gradient(to right, #304352, #000000)\"\r\n  }\r\n});\r\n\r\nexport class NavBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpened: false\r\n    };\r\n  }\r\n\r\n  toggleDrawer = booleanValue => () => {\r\n   this.setState({\r\n     drawerOpened: booleanValue\r\n   });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props; \r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar className={classes.appbar} position='sticky'>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.toggleDrawer(true)}> \r\n              <MenuIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\" >\r\n              <Link to='/' style={{ textDecoration: 'none' }}>\r\n                <Avatar alt=\"Shafin Ahmed\" src={MyAvatarPng} />\r\n              </Link>\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Box fontWeight=\"fontWeightBold\" m={1}>\r\n                Shafin Ahmed\r\n              </Box>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <NavDrawer\r\n          drawerOpened={this.state.drawerOpened}\r\n          toggleDrawer={this.toggleDrawer}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React from 'react';\r\nimport NavBar from './NavBar';\r\n\r\nexport class Main extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      \t<NavBar />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport resumePDF from '../graphics/ShafinAhmedCV.pdf'\r\nimport { Document, Page, pdfjs } from 'react-pdf/dist/entry.webpack';\r\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\r\n\r\nexport default function Resume() {\r\n  \tpdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n    return (\r\n    \t<div>\r\n\t\t\t<Document file={resumePDF}>\r\n\t\t\t\t<Page pageNumber={1}/>\r\n\t\t\t</Document>\r\n\t\t</div>\r\n    );\r\n  }\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport Main from './Components/Main';\nimport Resume from './Components/Resume';\nimport { Switch, Route } from 'react-router-dom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \t<Switch>\n    \t\t<Route exact path = \"/\" component = {Main} />\n    \t\t<Route path = \"/resume\" component = {Resume} />\n    \t</Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n\t<HashRouter>\n\t  <React.StrictMode>\n\t    <App />\n\t  </React.StrictMode>\n  \t</HashRouter>,\n  \tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 57;","module.exports = __webpack_public_path__ + \"static/media/myAvatar.b9c8501c.png\";","module.exports = __webpack_public_path__ + \"static/media/ShafinAhmedCV.9fcbc309.pdf\";"],"sourceRoot":""}